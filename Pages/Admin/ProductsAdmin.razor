@page "/admin/products"
@using MonsterStop.Models
@inject IProductService ProductService

<div class="transparent-panel">
    <h3 class="rainbow-text">Manage Products</h3>

    <button class="btn-neon" @onclick="AddNew" style="margin-bottom:20px;">Add New Product</button>

    @if (Products == null)
    {
            <p>Loading...</p>
    }
    else if (!Products.Any())
    {
            <p>No products available.</p>
    }
    else
    {
            <table style="width:100%; border-collapse: collapse;">
                <thead>
                    <tr style="border-bottom: 1px solid rgba(255,255,255,0.2);">
                        <th style="text-align:left; padding:10px;">Name</th>
                        <th style="text-align:left; padding:10px;">Price</th>
                        <th style="text-align:left; padding:10px;">Category</th>
                        <th style="text-align:left; padding:10px;">Supplier</th>
                        <th style="text-align:left; padding:10px; width:150px;">Actions</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var p in Products)
                {
                        <tr style="border-bottom: 1px solid rgba(255,255,255,0.1);">
                            <td style="padding:10px;">@p.Name</td>
                            <td style="padding:10px;">@p.Price:C</td>
                            <td style="padding:10px;">@p.Category.Name</td>
                            <td style="padding:10px;">@p.Supplier.Name</td>
                            <td style="padding:10px;">
                                <button class="btn-neon" style="margin-right:10px;" @onclick="() => Edit(p)">Edit</button>
                                <button class="btn-neon-outlined" @onclick="() => Delete(p.Id)">Delete</button>
                            </td>
                        </tr>
                }
                </tbody>
            </table>
    }
</div>

@code {
    private List<Product>? Products;

    protected override async Task OnInitializedAsync()
    {
        Products = await ProductService.GetAllProductsAsync();
    }

    private async Task Delete(int id)
    {
        await ProductService.DeleteProductAsync(id);
        Products = await ProductService.GetAllProductsAsync();
    }

    private void AddNew()
    {
        // Future: Show a form modal or section to add a new product
    }

    private void Edit(Product product)
    {
        // Future: Show a form modal or section to edit the selected product
    }
}
